{"version":3,"sources":["firebase/firebase.utils.js","components/TodoForm/TodoForm.component.jsx","components/clock/clock.component.jsx","components/TodoList/TodoList.component.jsx","components/footer/footer.component.jsx","components/auth-input/auth-input.component.jsx","components/auth/auth.component.jsx","components/header/header.component.jsx","redux/user/user.types.js","App.js","redux/user/user.actions.js","serviceWorker.js","redux/user/user.reducer.jsx","redux/root-reducer.js","redux/store.js","index.js"],"names":["createUserProfileDocument","userAuth","additionalData","a","userRef","firestore","doc","uid","get","exists","displayName","email","createdAt","Date","set","console","log","message","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","TodoForm","props","handleChange","e","setState","content","target","value","handleSubmit","preventDefault","addTODO","state","localStorage","setItem","JSON","stringify","className","onSubmit","this","type","onChange","placeholder","Component","TypicalText","steps","loop","Infinity","wrapper","TodoList","todos","todoDelete","toDoComplete","todolist","length","map","todo","key","id","onClick","isCompleted","name","style","Footer","href","rel","FormInput","label","otherProps","Auth","event","password","required","connect","currentUser","user","useState","show","setShow","signOut","Modal","onHide","animation","Body","UserActionTypes","App","filter","removeItem","index","findIndex","obj","Math","random","unsubscribeFromAuth","setCurrentUser","onAuthStateChanged","onSnapshot","snapShot","data","parse","getItem","prevState","dispatch","payload","Boolean","window","location","hostname","match","INITIAL_STATE","userReducer","action","combineReducers","UserReducer","middlewares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.64827e42.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyCTyw_LHA6QfoAjDvkibncQ0f7RoK_0Dj8\",\r\n  authDomain: \"todo-app-7db73.firebaseapp.com\",\r\n  databaseURL: \"https://todo-app-7db73.firebaseio.com\",\r\n  projectId: \"todo-app-7db73\",\r\n  storageBucket: \"todo-app-7db73.appspot.com\",\r\n  messagingSenderId: \"304312147183\",\r\n  appId: \"1:304312147183:web:f449e38edea27831ec8f1a\",\r\n  measurementId: \"G-LVRSSYVYR4\"\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth,additionalData)=>{\r\n  if(!userAuth) return;\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`)\r\n  const snapShot = await userRef.get()\r\n  if(!snapShot.exists){\r\n    const {displayName, email} = userAuth;\r\n    const createdAt = new Date();\r\n    try{\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        })\r\n    }catch(error){\r\n        console.log(\"ERROR HERE\", error.message)\r\n    }\r\n\r\n  } \r\n  return userRef;\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;","import React, { Component } from 'react'\r\n\r\nimport './TodoForm.style.css'\r\nexport class TodoForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             content : ''\r\n            \r\n        }\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            content: e.target.value\r\n        })\r\n    }\r\n    handleSubmit =(e) =>{\r\n        e.preventDefault();\r\n        this.props.addTODO(this.state);\r\n        localStorage.setItem('todos',JSON.stringify(this.state));\r\n     \r\n   \r\n        this.setState({\r\n            content: ''\r\n        })\r\n    }\r\n     render() {\r\n        return (\r\n            <div className='inputTask'>\r\n                <form onSubmit={ this.handleSubmit}>\r\n                \r\n                    <input \r\n                    className=\"textBox\" \r\n                    type='text' \r\n                    onChange={ this.handleChange} \r\n                    value={this.state.content}\r\n                    placeholder='what you want to do ...'\r\n                    />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoForm\r\n","import React, { Component } from 'react'\r\n\r\nimport Typical from 'react-typical'\r\n\r\nexport class TypicalText extends Component {\r\n  render () {\r\n    return (\r\n      <Typical\r\n        steps={['“Sometimes our stop-doing list needs to be bigger than our to-do list.”', 1000, '“The only thing more important than your to-do list is your to-be list.”', 1000,'“It is a waste of time not to do the most effective, useful, or important thing you can do.”',1000]}\r\n        loop={Infinity}\r\n        wrapper=\"p\"\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './TodoList.style.css'\r\nimport {TypicalText} from '../clock/clock.component'\r\n\r\nexport const TodoList = ({todos,todoDelete,toDoComplete}) => {\r\n    const todolist = todos.length ? (\r\n        todos.map(todo=>{\r\n            return (\r\n                <div className='box' key={todo.id}>\r\n                     <span className='trash trophy' >\r\n                     <ion-icon onClick={ () => toDoComplete(todo.id,todo.isCompleted)}  name=\"checkbox-outline\"></ion-icon>\r\n                    </span>\r\n\r\n               <span style={{'textDecoration': todo.isCompleted ? 'none' : 'line-through'}} > {todo.content} </span>\r\n                        <span className='trash' >\r\n                        <ion-icon onClick={ () => todoDelete(todo.id)}  name=\"trash-outline\"></ion-icon>\r\n                          </span>\r\n                </div>\r\n            )\r\n        })\r\n    ) :<div className='center'>  \r\n        <span className='clipboard'><ion-icon name=\"clipboard-outline\"></ion-icon> </span>\r\n        <p className='empty' >TODO LIST IS EMPTY</p>\r\n        <TypicalText/>\r\n    </div> \r\n\r\n    return (\r\n        <div className=''>\r\n            {todolist}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './footer.style.css'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div className='footer'>\r\n           {/* <a href='#' className='react'>\r\n             Developed In  <ion-icon name=\"logo-react\"></ion-icon>\r\n           </a>  */}\r\n\r\n           <a href = 'https://github.com/itsdb7' rel=\"noopener noreferrer\" target='_blank'  className='github'><ion-icon name=\"logo-github\"></ion-icon></a> \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport './auth-input.style.scss'\r\n\r\nexport const FormInput = ({ handleChange,label,...otherProps}) => {\r\n    return (\r\n        <div className='group'>\r\n            <input className=\"form-input\" onChange={handleChange} {...otherProps}/>\r\n            {\r\n                label ? \r\n                (<label className={`${otherProps.value.length ? 'shrink':''} form-input-label`}>\r\n                      {label}\r\n                </label>)\r\n                 : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport './auth.style.css'\r\nimport {FormInput} from '../auth-input/auth-input.component'\r\nimport { signInWithGoogle } from '../../firebase/firebase.utils'\r\nexport class Auth extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             email : '',\r\n             password : ''\r\n        }\r\n    }\r\n    handleSubmit= (event)=> {\r\n         event.preventDefault();\r\n         this.setState({email:'',password:''})\r\n    }\r\n    handleChange = event =>{\r\n        const {value,name } =event.target;\r\n        this.setState({[name]: value})\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className='Auth'>\r\n                <p className='tit'>sign in here!</p>    \r\n                <form onSubmit={this.handleSubmit}>\r\n               <FormInput \r\n                 name='email' \r\n                 type='email' \r\n                 label='email'\r\n                 value={this.state.email} \r\n                 handleChange={this.handleChange}\r\n                 required />  \r\n               <FormInput \r\n                 name='password'\r\n                 type='password'\r\n                 label='password' \r\n                 value={this.state.password} \r\n                 handleChange={this.handleChange}\r\n                 required />  \r\n                   \r\n                 <input className=\"submit-local\" type='submit' value='SIGN IN' />  \r\n                  or          \r\n                 <button className='submit-gogl' onClick={signInWithGoogle} placeholder=''  > SIGN IN WITH GOOGLE</button>  \r\n                 \r\n               </form>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Auth\r\n","import React, { useState } from \"react\";\r\nimport { auth } from '../../firebase/firebase.utils'\r\nimport './header.style.css'\r\n\r\nimport { connect } from 'react-redux'\r\nimport {Modal} from 'react-bootstrap'\r\nimport {Auth} from '../auth/auth.component'\r\nconst Header = ({currentUser}) => {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n  \r\n    return (\r\n        <div className='header'>\r\n                <h3 className='title'>PROXY-CIRCUIT <span className='logo'>todo app</span></h3> \r\n           \r\n              { currentUser ? \r\n                 <button className='button' onClick={()=> auth.signOut()}>sign out</button> : <button className='button' onClick={handleShow}>Sign in</button>\r\n                 }\r\n\r\n   \r\n       <Modal show={show} onHide={handleClose} animation={false}>\r\n         <Modal.Body>\r\n            <Auth />\r\n\r\n        </Modal.Body>\r\n      \r\n      </Modal> \r\n   </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: state.user.currentUser\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","export const UserActionTypes = {\r\n    SET_CURRENT_USER: 'SET_CURRENT_USER'\r\n  };\r\n  ","import React, { Component } from 'react'\r\nimport './App.css';\r\nimport { auth,createUserProfileDocument } from './firebase/firebase.utils'\r\nimport { TodoForm } from './components/TodoForm/TodoForm.component'\r\nimport {TodoList} from './components/TodoList/TodoList.component'\r\nimport {Footer} from './components/footer/footer.component'\r\nimport Header from '../src/components/header/header.component'\r\nimport {connect} from 'react-redux'\r\nimport {setCurrentUser} from './redux/user/user.actions'\r\n\r\nexport class App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n       todos:[\r\n        {id:1, content:'Welcome Sir!',isCompleted:true},\r\n      ]\r\n    }\r\n  }\r\n\r\n  todoDelete = (id) =>{\r\n    const todos = this.state.todos.filter(todo => {\r\n          return (  localStorage.removeItem(\"todos\"),\r\n          todo.id !== id) \r\n    })\r\n    this.setState({\r\n      todos\r\n    })\r\n  }\r\n   toDoComplete = (id,isCompleted) =>{\r\n     console.log(isCompleted)\r\n     var todos = [...this.state.todos];\r\n     var index = todos.findIndex(obj => obj.id === id);\r\n     todos[index].isCompleted = !isCompleted;\r\n     this.setState({todos});\r\n     console.log(isCompleted)\r\n      }\r\n\r\n  addTODO = (todo) =>{\r\n         todo.id = Math.random()\r\n         todo.isCompleted = true\r\n         let todos = [...this.state.todos, todo]\r\n         this.setState({\r\n           todos\r\n         })\r\n        //  localStorage.setItem('todos',JSON.stringify(this.state));\r\n\r\n  }\r\n\r\n unsubscribeFromAuth = null;\r\n\r\n componentDidMount() {\r\n  const { setCurrentUser } = this.props;\r\n\r\n  this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\r\n    if (userAuth) {\r\n      const userRef = await createUserProfileDocument(userAuth);\r\n\r\n      userRef.onSnapshot(snapShot => {\r\n        setCurrentUser({\r\n          id: snapShot.id,\r\n          ...snapShot.data()\r\n        });\r\n      });\r\n    }\r\n\r\n    setCurrentUser(userAuth);\r\n  });\r\n   if(JSON.parse(localStorage.getItem('todos'))){\r\n  this.setState( prevState => ({\r\n    todos: [\r\n      ...prevState.todos,\r\n      JSON.parse(localStorage.getItem('todos') )\r\n    ]\r\n  }))   \r\n}\r\n}\r\n\r\ncomponentWillUnmount() {\r\n  this.unsubscribeFromAuth();\r\n}\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <div className='App'>\r\n            <Header />\r\n            <TodoForm addTODO={this.addTODO} />\r\n            <TodoList \r\n              todos={this.state.todos} \r\n              todoDelete={ this.todoDelete} \r\n              toDoComplete={ this.toDoComplete}\r\n           />\r\n            <Footer/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ user }) => ({\r\n  currentUser: user.currentUser\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCurrentUser: user => dispatch(setCurrentUser(user))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import { UserActionTypes } from './user.types';\r\n\r\nexport const setCurrentUser = user =>({\r\n    type: UserActionTypes.SET_CURRENT_USER,\r\n    payload:user\r\n})\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { UserActionTypes } from './user.types';\r\n\r\nconst INITIAL_STATE = {\r\n    currentUser : null\r\n}\r\nconst userReducer = (state= INITIAL_STATE ,action) => {\r\n    switch(action.type){\r\n        case UserActionTypes.SET_CURRENT_USER :\r\n              return{\r\n                  ...state,\r\n                  currentUser:action.payload\r\n              }\r\n         default : \r\n               return state;   \r\n    }\r\n}\r\nexport default userReducer;\r\n\r\n\r\n\r\n","import {combineReducers} from 'redux'\r\n\r\nimport UserReducer from '../redux/user/user.reducer'\r\n\r\nexport default combineReducers({\r\n    user:UserReducer\r\n})\r\n\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from './root-reducer'\r\n\r\nconst middlewares = [logger];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport store from './redux/store' \r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <BrowserRouter>\r\n         <App />\r\n      </BrowserRouter>\r\n </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}